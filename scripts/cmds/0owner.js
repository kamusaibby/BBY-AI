const util = require("util");
const fs = require("fs");
const path = require("path");
const axios = require("axios");
const exec = util.promisify(require("child_process").exec);

module.exports = {
┬а┬а┬а config: {
┬а┬а┬а┬а┬а┬а┬а name: "owner",
┬а┬а┬а┬а┬а┬а┬а aliases: ["creator", "dev"],
┬а┬а┬а┬а┬а┬а┬а version: "1.0",
┬а┬а┬а┬а┬а┬а┬а author: "XOS Eren",
┬а┬а┬а┬а┬а┬а┬а role: 0,
┬а┬а┬а┬а┬а┬а┬а shortDescription: {
┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а en: "Show the bot owner's information."
┬а┬а┬а┬а┬а┬а┬а },
┬а┬а┬а┬а┬а┬а┬а longDescription: {
┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а en: "Displays details about the bot owner, including name, contact, and prefix."
┬а┬а┬а┬а┬а┬а┬а },
┬а┬а┬а┬а┬а┬а┬а category: "SYSTEM",
┬а┬а┬а┬а┬а┬а┬а guide: {
┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а en: "Use {pn} to see the bot owner's details."
┬а┬а┬а┬а┬а┬а┬а }
┬а┬а┬а },

┬а┬а┬а onStart: async function ({ message, event, api }) {
┬а┬а┬а┬а┬а┬а┬а try {
┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а const spinnerFrames = ['РаІ', 'РаЎ', 'Ра╣', 'РаИ', 'Ра╝', 'Ра┤', 'Рад', 'РаД', 'РаЄ', 'РаЈ'];
┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а let currentFrame = 0;

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а // Send initial loading message
┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а const loadingMessage = await api.sendMessage(`${spinnerFrames[0]} Gathering owner info...`, event.threadID);
┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а 
┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а // Animate the spinner for 4 seconds
┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а const intervalId = setInterval(async () => {
┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а currentFrame = (currentFrame + 1) % spinnerFrames.length;
┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а await api.editMessage(`${spinnerFrames[currentFrame]} Gathering owner info...`, loadingMessage.messageID);
┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а }, 200);

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а // Wait for 4 seconds before showing the owner name
┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а setTimeout(async () => {
┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а clearInterval(intervalId);

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а // Edit the message to show the owner's name after 4 seconds
┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а await api.editMessage("­ЪЉЉ ­ЮЌЋ­ЮЌб­ЮЌД ­ЮЌб­ЮЌф­ЮЌА­ЮЌў­ЮЌЦ ­ЮЌю­ЮЌА­ЮЌЎ­ЮЌб ­ЪЉЉ\n\n­ЪЊЏ ­ЮЌА­ЮЌ«­ЮЌ║­ЮЌ▓: ­ЮЌг­ЮЌб­ЮЌе­ЮЌЦ ­ЮЌЋ­ЮЌў­ЮЌЋ", loadingMessage.messageID);

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а // Wait for another 2 seconds and show the rest of the info
┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а setTimeout(async () => {
┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а const ownerInfo = `РЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљ\n\n­ЪЎєРђЇРЎѓ№ИЈ ­ЮЌА­ЮЌ«­ЮЌ║­ЮЌ▓:┬а┬а┬а┬а┬а┬а­ЮЌД­ЮЌб­ЮЌа ­Ъјђ┬а┬а

­ЪЊъ ­ЮЌќ­ЮЌ╝­ЮЌ╗­ЮЌД­ЮЌ«­ЮЌ░­ЮўЂ:┬а┬а┬а [­ЮЌЏ­ЮЌю­ЮЌЌ­ЮЌЌ­ЮЌў­ЮЌА]┬а 

­ЪЏа ­ЮЌЋ­ЮЌ╝­ЮўЂ ­ЮЌЕ­ЮЌ▓­ЮЌ┐­Юўђ­ЮЌХ­ЮЌ╝­ЮЌ╗:┬а 1.0
┬а 
­ЪЏъ ­ЮЌБ­ЮЌ┐­ЮЌ▓­ЮЌ│­ЮЌХ­ЮўЁ:┬а ( ${global.GoatBot.config.prefix} ) 

­Ъњ╗ ­ЮЌБ­ЮЌ╝­Юўё­ЮЌ▓­ЮЌ┐­ЮЌ▓­ЮЌ▒ ­ЮЌЋ­Юўє:┬а ­ЮЌД­ЮЌб­ЮЌа ­ЮЌЋ­ЮЌЋ­ЮЌг┬а┬а

­Ъџђ ­ЮЌд­ЮўЂ­ЮЌ«­ЮўЂ­Юўѓ­Юўђ:­ЮЌЦ­Юўѓ­ЮЌ╗­ЮЌ╗­ЮЌХ­ЮЌ╗­ЮЌ┤ ­ЮЌд­ЮЌ║­ЮЌ╝­ЮЌ╝­ЮўЂ­ЮЌх­ЮЌ╣­Юўє РюЁ`;

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а // Online Image URL
┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а const imageUrl = "https://i.imgur.com/1XOcu8A.jpeg";
┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а const imagePath = path.join(__dirname, "owner.jpg");

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а // Download the image
┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а const response = await axios({ url: imageUrl, responseType: "stream" });
┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а const writer = fs.createWriteStream(imagePath);
┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а response.data.pipe(writer);

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а writer.on("finish", async () => {
┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а await api.sendMessage({ body: ownerInfo, attachment: fs.createReadStream(imagePath) }, event.threadID);
┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а fs.unlinkSync(imagePath); // Delete the image after sending
┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а });

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а writer.on("error", async () => {
┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а await api.sendMessage(ownerInfo, event.threadID);
┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а });

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а // Remove the loading spinner after the full info is displayed
┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а api.unsendMessage(loadingMessage.messageID);
┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а }, 2000); // 2 sec delay before showing full info

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а }, 4000); // 4 sec delay before showing owner name

┬а┬а┬а┬а┬а┬а┬а } catch (error) {
┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а console.error("Error in owner.js:", error);
┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а api.sendMessage(`Рџа№ИЈ Error: ${error.message}`, event.threadID);
┬а┬а┬а┬а┬а┬а┬а }
┬а┬а┬а }
};
